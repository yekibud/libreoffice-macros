<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Module1" script:language="StarBasic" script:moduleType="normal">REM  *****  BASIC  *****
 
sub TableNumbering

    dim document   as object
    dim dispatcher as object
    &apos; TODO: CELL_CURSOR_GAP should be determined by the relative default for the gap between rows
    &apos; - check table properties first to determine gap?
    &apos; cell cursor gap between rows
    &apos;CELL_CURSOR_GAP = 690
    CELL_CURSOR_GAP = 780
    CELL_PAGE_GAP_START = 6200
    PAGE_SIZE = 28441
    &apos;PAGE_SIZE_TOLERANCE = 1136
    &apos;PAGE_SIZE_TOLERANCE = 2000
    PAGE_SIZE_TOLERANCE = 2300
    &apos;CELL_PAGE_GAP_END = 6900
    &apos; 6841
    &apos; TODO: remove all these hard-coded gaps as they can vary depending on font-size, row padding, etc.
    CELL_PAGE_GAP_END = 6800
    document   = ThisComponent.CurrentController.Frame
    dispatcher = createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
    cursor = ThisComponent.currentController.getViewCursor()
    dim element(0) as new com.sun.star.beans.PropertyValue
    cellValue = 1
    cellName = cursor.cell.cellName
    cursorCorrected = false
    pageNum = cursor.page
    nextPageNum = cursor.page

    do	 
        element(0).Name = &quot;Text&quot;
        element(0).Value = Cstr(cellValue)
        dispatcher.executeDispatch(document, &quot;.uno:InsertText&quot;, &quot;&quot;, 0, element())
        originalPosition = cursor.position.y
        dispatcher.executeDispatch(document, &quot;.uno:GoDown&quot;, &quot;&quot;, 0, element())
        nextPosition = cursor.position.y
        
        positionDifference = nextPosition - originalPosition	
        if positionDifference &gt; CELL_CURSOR_GAP then
            dispatcher.executeDispatch(document, &quot;.uno:GoUp&quot;, &quot;&quot;, 0, element())
            &apos;if not cursorCorrected then
            &apos;    dispatcher.executeDispatch(document, &quot;.uno:GoRight&quot;, &quot;&quot;, 0, element())
            &apos;    cursorCorrected = true
            &apos;end if
            
            &apos; don&apos;t add a paragraph during page transitions
            &apos; NOTE: this will create line numbers with blank lines until the bottom of the page if 
            &apos; there is a gap between the last row on the page and the end of the page
            &apos; TODO: make this calculation simply a matter of page size since the gap calculation can happen anywhere on the page 
            pagePosition = nextPosition Mod PAGE_SIZE
            if pagePosition &lt; PAGE_SIZE_TOLERANCE and positionDifference &gt; CELL_PAGE_GAP_START and positionDifference &lt; CELL_PAGE_GAP_END then
                dispatcher.executeDispatch(document, &quot;.uno:GoDown&quot;, &quot;&quot;, 0, element())
            else
                &apos; TODO: don&apos;t insert paragraph if number to the right
                dispatcher.executeDispatch(document, &quot;.uno:GoRight&quot;, &quot;&quot;, 0, element())
  				&apos;oMRI.inspect(document)
  				methods = cursor.cell.DBG_methods
  				properties = cursor.cell.dbg_properties
  				value = cursor.cell.value
  				string_ = cursor.cell.getString()
  				isNum = IsNumeric(string_)
  				&apos; HACK: don&apos;t break numbers if cursor winds up in the middle
  				If isNum Then
  				    dispatcher.executeDispatch(document, &quot;.uno:GoRight&quot;, &quot;&quot;, 0, element())
  				End If
                dispatcher.executeDispatch(document, &quot;.uno:GoLeft&quot;, &quot;&quot;, 0, element())
            	dispatcher.executeDispatch(document, &quot;.uno:InsertPara&quot;, &quot;&quot;, 0, Array())  
            end if
        end if
        
        nextPageNum = cursor.page
        if nextPageNum &lt;&gt; pageNum then
            cellValue = 1
            pageNum = nextPageNum
            cursorCorrected = false
        else
            cellValue = cellValue + 1
        end if   
    &apos; TODO: numbering will end prematurely and cause numbers to be placed in wrong position if there is whitespace or
    &apos; non-left alignment after table end
    loop until isEmpty(cursor.cell)

end sub
</script:module>